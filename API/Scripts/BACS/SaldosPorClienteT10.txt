CREATE procedure [dbo].[SaldosPorClienteT10] 

							(@_clie_alias varchar(6),

							 @_ccus_id int,

							 @_fecha datetime = null)

as

begin

	

	if (@_fecha is null)

		select @_fecha = CONVERT(char(8),getdate(),112)

	



	create table #_tmp (

		Tipo varchar(40),

		Depositante varchar(10),

		Comitente int,

		Especie varchar(6),

		Descripcion varchar(40),

		Cotizacion float null,

		FechaCotizacion varchar(20) null,

		Saldo float,

		SaldoValorizado float,

		Cliente varchar(200) 

	)

	declare curCuentas cursor for
	select cc.ccus_id from cuentas_custodia_vinculadas ccv inner join cuentas_custodia cc on ccv.ccus_id = cc.ccus_id
	where clie_alias = @_clie_alias 
	and tvcc_id = 1
	and cc.tccus_alias not in ('MON')

	open curCuentas
	fetch next from curCuentas into @_ccus_id

	while @@FETCH_STATUS = 0
	begin

		insert into #_tmp
	select 

		t.Tipo as 'Tipo',

		t.Depositante as 'Depositante',

		t.Comitente as 'Comitente',

		t.Especie as 'Especie',

		t.Descripcion as 'Descripcion',

		null,

		null,

		sum(isnull(t.Saldo,0)) as 'Saldo',

		null as 'SaldoValorizado', 

		t.Cliente as 'Cliente'

	from

		(
			select  

				te.tesp_descrip as 'Tipo',

				c.tccus_alias as 'Depositante',

				c.ccus_numero as 'Comitente',

				m.espe_codigo as 'Especie',

				es.espe_descrip as 'Descripcion',

				m.ccm_monto * case m.ccm_tipomov when 'D' then -1 else 1 end as 'Saldo',

				cl.clie_nombreafip as 'Cliente',

				m.ccm_id ID

			from

				cuentas_custodia_movim m

				inner join cuentas_custodia c on m.ccus_id = c.ccus_id

				inner join cuentas_custodia_vinculadas ccv on c.ccus_id = ccv.ccus_id

				inner join clientes cl on ccv.clie_alias = cl.clie_alias

				inner join especies es on m.espe_codigo = es.espe_codigo

				inner join tiposespecies te on es.tesp_codigo = te.tesp_codigo

				inner join conceptos_cuentas_custodia ccc on m.concc_id = ccc.concc_id

			where

					m.ccm_fvalor <= @_fecha

				and cl.clie_alias = @_clie_alias

				and m.ccm_monto <> 0	

				and c.tccus_alias != 'MON'

				and m.ccm_estado = 'A'

				and c.ccus_id = @_ccus_id

			    and	ccc.concc_id not in (select concc_id from conceptos_cuentas_custodia where 

																concc_id < 100 and concc_esbloqueo = 1)

				and ccc.concc_alias not in ('CTIT','VTIT','RLOPT')

				
			union

			select 

				te.tesp_descrip as 'Tipo',

				c.tccus_alias as 'Depositante',

				c.ccus_numero as 'Comitente',

				o.espe_codigo as 'Especie',

				es.espe_descrip as 'Descripcion',

				o.oper_monto * case o.tope_suma when 1 then 1 else -1 end as 'Saldo',

				cl.clie_nombreafip as 'Cliente',

				o.oper_numero as ID

			from 

				operaciones_vista o

				inner join especies es on o.espe_codigo = es.espe_codigo

				inner join tiposespecies te on te.tesp_codigo = es.tesp_codigo

				inner join operaciones_datos od on o.oper_numero = od.oper_numero

				inner join cuentas_custodia c on od.ccta_liqgali = c.ccus_id

				inner join clientes cl on o.clie_alias = cl.clie_alias

			where 

				o.clie_alias = @_clie_alias 

			and oper_forigen <=@_fecha

			and esto_codigo not in ('N','C')

			and tope_codigo in (101,102,103,104,131,132,133,134,401,402)

			and od.ccta_liqgali = @_ccus_id

			and ISNULL(od.orden_numero,0) >= 0 

			union

			select 

				te.tesp_descrip as 'Tipo',

				c.tccus_alias as 'Depositante',

				c.ccus_numero as 'Comitente',

				o.espe_codigo as 'Especie',

				es.espe_descrip as 'Descripcion',

				o.oper_monto * case o.tope_suma when 1 then -1 else 1 end as 'Saldo',

				cl.clie_nombreafip as 'Cliente',

				o.oper_numero as ID

			from 

				operaciones_vista o

				inner join especies es on o.espe_codigo = es.espe_codigo

				inner join tiposespecies te on te.tesp_codigo = es.tesp_codigo

				inner join operaciones_datos od on o.oper_numero = od.oper_numero

				inner join cuentas_custodia c on od.ccta_liqgali = c.ccus_id

				inner join clientes cl on o.clie_alias = cl.clie_alias

			where 

				o.clie_alias = @_clie_alias 

			and oper_forigen <=@_fecha

			and esto_codigo not in ('N','C')

			and tope_codigo in (101,102,103,104,131,132,133,134,401,402)

			and od.ccta_liqgali = @_ccus_id

			and ISNULL(od.orden_numero,0) = 0 
			
			) t 

	group by

		t.Tipo ,

		t.Depositante ,

		t.Comitente ,

		t.Especie ,

		t.Descripcion ,

		t.Cliente

		

	order by t.Tipo

	
		fetch next from curCuentas into @_ccus_id
	end	

	close curCuentas
	deallocate curCuentas

	delete from #_tmp where Saldo = 0

	

	/* se actualiza la tabla con la cotización de cada especie */

	declare @_especie_a_procesar varchar(6),	

			@_saldo_a_procesar money

	

	declare cur_cotizaciones cursor for

	select Especie,Saldo from #_tmp

	

	open cur_cotizaciones   

	fetch next from cur_cotizaciones into @_especie_a_procesar,@_saldo_a_procesar



	while @@fetch_status = 0   

	begin   

		declare @cotizacion float, @fechaCotizacion datetime	

		declare @_moneda varchar(6)
		
		select @_moneda = espe_codloc from basecontrol		

		select @cotizacion = cotiz, @fechaCotizacion = fecha from dbo.UltimaCotizacionConocidaFecha(@_especie_a_procesar,@_fecha,0,3,'',@_moneda,'BOL',1)		

		--select @fechaCotizacion = fecha from dbo.UltimaCotizacionConocidaFecha(@_especie_a_procesar,@_fecha,0,3,'','80B','BOL',1)		

		

		if ISNULL(@fechaCotizacion,'') <> ''

		begin

			if (DATEADD(MONTH,-1,@_fecha) > @fechaCotizacion)

			begin

				select @cotizacion = 0, @fechaCotizacion = null

			end

		end

						

		update #_tmp set 

			SaldoValorizado = (isnull(@_saldo_a_procesar * @cotizacion,0)), 

			Cotizacion = isnull(@cotizacion,0),

			FechaCotizacion = convert(varchar(10),@fechaCotizacion,103)

		where Especie = @_especie_a_procesar

		

		fetch next from cur_cotizaciones into @_especie_a_procesar, @_saldo_a_procesar		  

	end 

	

	close cur_cotizaciones   

	deallocate cur_cotizaciones

	

	select * from #_tmp 

	

	drop table #_tmp

	

end



